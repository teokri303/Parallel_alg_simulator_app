


{
    "Shearsort algorithm": "Αλγόριθμος Shearsort",
    "Schnorr Shamir algorithm": "Αλγόριθμος Schnorr-Shamir",
    "Show array": "Εμφάνιση πλέγματος",
    
    "English": "EN",
    "Greek": "EL",
    "Subtitle": "Προσομοιωτής παράλληλων αλγορίθμων ταξινόμησης",
    "no conf" : "Ορίστε το πλέγμα για να εμφανιστεί ",
    "Reset Grid": "Καθαρισμός",
    "Ready to sort" : "Πλέγμα έτοιμο",

    "Enter mesh dimensions" :"Επιλογή διαστάσεων πλέγματος",
    "Random array":"Τυχαίο πλέγμα",
    "Own":"Δικό μου πλέγμα",
    "Sort" : "Ταξινόμηση",

    "shear text" :"Ο Shearshort είναι ένας παράλληλο αλγόριθμος ταξινόμησης πλέγματος που οργανώνει τα στοιχεία σε φάσεις. Εναλλάσσεται μεταξύ της ταξινόμησης των γραμμών προς τα δεξιά ή αριστερά και της ταξινόμησης των στηλών προς τα κάτω. Αρχικά, οι γραμμές ταξινομούνται σε εναλλασσόμενες κατευθύνσεις, δημιουργώντας ένα μερικώς ταξινομημένο πλέγμα οριζόντια. Στη συνέχεια, όλες οι στήλες ταξινομούνται προς τα κάτω. Αυτή η διαδικασία επαναλαμβάνεται μέχρι να ταξινομηθεί ολόκληρο το πλέγμα.",
    "ss text" :  "Ο αλγόριθμος του Schnorr και του Shamir ταξινομεί παράλληλα τα στοιχεία του πλέγματος σε μια snakelike διάταξη χρησιμοποιώντας μια πολυφασική προσέγγιση (8 φάσεις). Διαιρεί το πλέγμα σε block, ταξινομεί τα στοιχεία τους σε φθίνουσα τάξη, εκτελεί αναδιάταξη στηλών και πραγματοποιεί επιπλέον φάσεις ταξινόμησης. Οι φάσεις 1, 3, 5 και 6 μπορούν να πραγματοποιηθούν όλες χρησιμοποιώντας τον αλγόριθμο Shearsort.",


    "Back to sort" :  "Νέο πλέγμα",

    "Phase":"Φάση ",

    "Random mesh pagi" :"Τυχαίο πλέγμα.",
    "Parallel sorting rows snakelike order" : "Tαξινόμιση των γραμμών.* Στις περιττές γραμμές οι μικρότεροι αριθμοί μετακινούνται πρός τα αριστερά.* Στις άρτιες γραμμές οι μικρότεροι αριθμοί μετακινούνται πρός τα δεξιά." ,
    "Parallel sorting columns" : "Ταξινόμηση των στηλών.* Οι μικρότεροι αριθμοί μετακινούνται πρός τα πάνω.",


    "final sorted": "Το πλέγμα ταξινομήθηκε.* Οι αριθμοί εμφανίζονται σε snakelike διάταξη.",


    "Phase 1 - Snakelike blocks" : "Φάση 1: Το πλέγμα χωρίζεται σε N$1/4$ block μεγέθους N$3/8$ × N$3/8$ και ταξινομούνται όλα τα block σε snakelike διάταξη χρησιμοποιώντας τον αλγόριθμο Shearsort. To N είναι ο αριθμός των κελιών του πλέγματος δηλαδή ο συνολικός αριθμός των στοιχείων πρός ταξινόμηση.",
    "Phase 2 - K-way  Unshuffle" : "Φάση 2: Εκτελείται μια Ν$1/8$ αναδιάταξη των στηλών του πλέγματος. Πιο συγκεκριμένα ανακατεύει τις στήλες έτσι ώστε οι Ν$3/8$ στήλες σε καθε block να διανέμονται ομοιόμορφα ανάμεσα στις Ν$1/8$ κάθετες φέτες του πλέγματος.* k-way αναδιάταξη σημαίνει η διανομή αντικειμένων σε k παίκτες με τέτοιο τρόπο ώστε κάθε παίκτης να λαμβάνει ίσα κατανεμημένα στοιχεία. Μια κάθετη φέτα περιέχει μια στήλη απο block.  Η αναδιάταξη των στηλών σημαίνει την αναδιανομή των στηλών που υπάρχουν σε μια κάθετη φέτα πρός όλες τις άλλες κάθετες φέτες του πλέγματος. Κάθε στήλη του πλέγματος έχει μια μοναδική δυαδική τιμή ξεκινώντας απο το 0. Στην ουσία η αναδιάταξη των στηλών σημαίνει οτι μετακινούμε κάθε στήλη του πλέγματος σε μια νέα θέση που ορίζεται απο μια δεξιά κυκλική μετατόπιση του δυαδικού αριθμού που αντιστοιχεί στην στήλη αυτη. πχ. Η στήλη 7 στήν οποία αντιστοιχεί ο δυαδικός αριθμός 0111 μεταφέρεται στήν στήλη 11 που αντιστοιχεί στον δυαδικό αρίθμο 1011. ",
    "Phase 3 - Snakelike blocks" : "Φάση 3: Ταξινόμηση των block σε snakelike διάταξη.",
    "Phase 4 - Sort columns" : "Φάση 4: Ταξινόμηση των στηλών σε γραμμική διάταξη. Οι μικρότεροι αριθμοί μετακινούνται πρός τα πάνω.",
    "Phase 5 - Vertical slices sort (1-2...)" : "Φάση 5: Ταξινόμηση των block 1 και 2 μαζί, 3 και 4 μαζί κλπ., δηλαδή κάθε κάθετης φέτας, σε snakelike διάταξη. ",
    "Phase 6 - Vertical slices sort (2-3...)" : "Φάση 6: Ταξινόμηση των block 2 και 3 μαζί, 4 και 5 μαζί κλπ., δηλαδή κάθε κάθετης φέτας, σε snakelike διάταξη. ",
    "Phase 7 - Rows sort snakelike" : "Φάση 7: Ταξινόμηση κάθε γραμμής του πλέγματος κατά την φορά του συνολικού snake . Στις περιττές γραμμές οι μικρότεροι αριθμοί μετακινούνται πρός τα αριστερά. Στις άρτιες γραμμές οι μικρότεροι αριθμοί μετακινούνται πρός τα δεξιά." ,
    "Phase 8 - 2N^3/8 Steps of odd-even transpotition" : "Φάση 8: Εκτέλεση 2N$3/8$ βημάτων του αλγορίθμου odd even transposition σε ολόκληρο το πλέγμα.",

    "Reshape array to optimal dimensions" : "Ενσωμάτωση του πλέγματος σε πλέγμα ιδανικών διαστάσεων.",
    "Reshape to given dimensions" : "Επαναφορά του πλέγματος στις αρχικές διαστάσεις.",


    "language choose" : "Επιλογή γλώσσας",
    "Tips":"Χρήσιμα στοιχεία:",


    "how to use_T": "Χρήση της εφαρμογής",
    "leema_T": "Γιατί ασπρόμαυρα κελιά",
    "mesh enclosures reshape_T": "Ενσωματώσεις πλεγμάτων",
    "the purpose_T" : "Σχετικά με την εφαρμογή",


    "how to use": "Πρώτα επιλέξτε τον αλγόριθμο παράλληλης ταξινόμησης (Shearsort ή Schnorr-Shamir αλγόριθμος) που επιθυμείτε να εφαρμόσετε κάνοντας κλικ στο πλαίσιο του. Στη συνέχεια, μέσα στο επιλεγμένο πλαίσιο, ορίστε και οπτικοποιήστε το πλέγμα: επιλέξτε τη διάστασή του απο το dropdown μενού, γεμίστε το αυτόματα με τυχαίες τιμές 0/1 ή συμπληρώστε τις δικές σας τιμές 0/1 και κάντε κλικ στο κουμπί Προβολή πλέγματος για να το δείτε. Κάνοντας κλικ στο κουμπί Ταξινόμηση, θα δείτε τον αλγόριθμο να εκτελείται.",
    "leema": "Και οι δύο αλγόριθμοι ταξινομούν σωστά κάθε ακολουθία εισόδου. Ωστόσο, όλες οι ακολουθίες εισόδου - ανεξάρτητα από τις ακριβείς τους τιμές - μπορούν πάντα να απεικονιστούν σε μια κατάλληλα δημιουργημένη ακολουθία από 0 και 1, οι οποίες εμφανίζονται στο πλέγμα ως λευκά και μαύρα κελιά, αντίστοιχα.",
    "mesh enclosures reshape": "Ο αλγόριθμος Shearsort είναι μια καλή επιλογή για μικρά πλέγματα, ενώ για μεγάλα πλέγματα ο αλγόριθμος του Schnorr-Shamir τρέχει πιο γρήγορα χρησιμοποιώντας ένα πιο εξελιγμένο διαχωρισμό του πλέγματος σε block. Όπως θα παρατηρήσετε, μερικές φορές το πλέγμα σας ενσωματώνεται σε ένα μεγαλύτερο πλέγμα για να διευκολυνθεί ο διαχωρισμός του σε κατάλληλα block.",
    "the purpose" : "Αυτή η διαδραστική εφαρμογή σε μορφή παιχνιδιού έχει σκοπό να λειτουργήσει ως βοηθητικό υλικό για μαθησιακούς / πειραματικούς σκοπούς σχετικά με τη μελέτη και την ανάλυση δύο παράλληλων αλγορίθμων ταξινόμησης για διδιάστατα πλέγματα, τον αλγόριθμο Shearsort και τον αλγόριθμο '3n sort' των  Schnorr και Shamir."

}