


{
    "Shearsort algorithm": "Αλγόριθμος Shearsort",
    "Schnorr Shamir algorithm": "Αλγόριθμος Schnorr Shamir",
    "Show array": "Εμφάνιση πλέγματος",
    
    "English": "Αγγλικά",
    "Greek": "Ελληνικά",
    "Subtitle": "Υλοποίηση και ανάλυση παράλληλων αλγορίθμων ",
    "no conf" : "Δεν υπάρχουν στοιχεία για τον πίνακα",
    "Reset Grid": "Καθαρισμός",
    "Ready to sort" : "Πίνακας έτοιμος",

    "Enter mesh dimensions" :"Διαστάσεις πλέγματος",
    "Random array":"Τυχαίος πίνακας",
    "Own":"Δικός μου",
    "Sort" : "Ταξινόμησε",

    "shear text" :"Ο Shearshort είναι ένας παράλληλο αλγόριθμος ταξινόμησης πλέγματος που οργανώνει τα στοιχεία σε φάσεις. Εναλλάσσεται μεταξύ της ταξινόμησης των γραμμών προς τα δεξιά ή αριστερά και της ταξινόμησης των στηλών προς τα κάτω. Αρχικά, οι γραμμές ταξινομούνται σε εναλλασσόμενες κατευθύνσεις, δημιουργώντας ένα μερικώς ταξινομημένο πλέγμα οριζόντια. Στη συνέχεια, όλες οι στήλες ταξινομούνται προς τα κάτω. Αυτή η διαδικασία επαναλαμβάνεται μέχρι να ταξινομηθεί ολόκληρο το πλέγμα.",
    "ss text" :  "Ο αλγόριθμος του Schnorr και του Shamir ταξινομεί παράλληλα στοιχεία σε μια φθίνουσα τάξη χρησιμοποιώντας μια πολυφασική προσέγγιση (8 φάσεις). Διαιρεί το πλέγμα σε μπλοκ, ταξινομεί τα στοιχεία τους σε φθίνουσα τάξη, εκτελεί αναδιάταξη στηλών και πραγματοποιεί επιπλέον φάσεις ταξινόμησης. Οι φάσεις 1, 3, 5 και 6 μπορούν να πραγματοποιηθούν όλες χρησιμοποιώντας τον αλγόριθμο Shearsort.",


    "Back to sort" :  "Νέος πίνακας",

    "Parallel sorting rows snakelike order" : "Παράληλη ταξινόμιση των γραμμών κατά την φορά του snake" ,
    "Parallel sorting columns" : "Παράλληλη ταξινόμιση των στηλών προς τα κάτω",



    "Phase 1 - Snakelike blocks" : "Φάση 1 - Snakelike ταξινόμιση των blocks",
    "Phase 2 - K-way  Unshuffle" : "Φάση 2 - K-way  ανακάτεμα των στηλών",
    "Phase 3 - Snakelike blocks" : "Φάση 3 - Snakelike ταξινόμιση των blocks",
    "Phase 4 - Sort columns" : "Φάση 4 - Παράλληλη ταξινόμιση των στηλών προς τα κάτω",
    "Phase 5 - Vertical slices sort (1-2...)" : "Φάση 5 - Ταξινόμιση στις κάθετες φέτες (1-2...)",
    "Phase 6 - Vertical slices sort (2-3...)" : "Φάση 6 - Ταξινόμιση στις κάθετες φέτες (2-3...)",
    "Phase 7 - Rows sort snakelike" : "Φάση 7 - Παράληλη ταξινόμιση των γραμμών κατά την φορά του snake" ,
    "Phase 8 - 2N^3/8 Steps of odd-even transpotition" : "Φάση 8 - 2N^3/8 Βήματα του odd-even transpotition",

    "Reshape array to optimal dimensions" : "Διαμόρφωση του πίνακα στην επόμενη ιδανική κατάσταση διαστάσεων",
    "Reshape to given dimensions" : "Αναδιαμόρφωση στις δοθείσες διαστάσεις",


    "language choose" : "Επιλογή γλώσσας",



    "leema": "Οι πινακες γεμιζουν με μαύρα και λευκά κελιά που αντιπροσωπεύουν τις τιμες 0 και 1 αντίστοιχα, για να δείξουν την ορθότητα των αλγορίθμων χρησιμοποιώντας την αρχή του 0-1. Η αρχή του 0-1 αναφέρει το εξής: Εάν ένα δίκτυο συγκριτών ταξινομεί κάθε ακολουθία από 0 και 1, τότε ταξινομεί κάθε ακολουθία από αυθαίρετες τιμές. Χωρίς απώλεια γενικότητας, μπορούμε συνεπώς να περιορίσουμε την απόδειξη σε ακολουθίες εισόδου που αποτελούνται από 0 και 1."
}   